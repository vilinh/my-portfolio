name: Deploy

on:
  push:
    branches:
      - main
    workflow_dispatch:

jobs:
  call-test-workflow:
    uses: ./.github/workflows/test.yml
  send-error-discord-notif:
    name: "Send Discord Error Notif"
    runs-on: ubuntu-latest
    needs: [call-test-workflow]
    if: always() && (needs.call-test-workflow.result == 'failure')
    steps:
      - name: Send error notification to Discord server
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Tests Failed"
  deploy:
    name: "Deploy to AWS EC2 Virtual Machine"
    runs-on: ubuntu-latest
    needs: [call-test-workflow]
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >>~/.ssh/config <<END
          Host my-vm
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_IP: ${{ secrets.SSH_IP }}
      
      - name: Deploy site
        run: ssh my-vm '~/redeploy-site.sh'
      
      - name: Print out container status
        run: ssh my-vm 'cd ~/my-portfolio && docker-compose ps'
      
      - name: Send successful notification to Discord server
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš€ Deployment Successful"
  send-deploy-fail-notif:
    name: "Send Deploy Fail Error Notif"
    runs-on: ubuntu-latest
    needs: [call-test-workflow, deploy]
    if: always() && (needs.deploy.result == 'failure')
    steps:
      - name: Send error notification to Discord server
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Deployment Failed"